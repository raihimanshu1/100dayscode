Count number of occurrences (or frequency) of each element in a sorted array

ref java2blog

public class FreqOfEachElems {
 
	public static void main(String[] args) {
 
		Scanner scn = new Scanner(System.in);
		int[] arr = new int[scn.nextInt()];
 
		for (int i = 0; i < arr.length; i++) {
			arr[i] = scn.nextInt();
		}
 
		System.out.print("arr[]: {");
		for (int i = 0; i < arr.length; i++) {
			System.out.print(" "+arr[i]);
		}
 
		System.out.println(" }");
		HashMap<Integer, Integer> freqMap = solveIterative(arr);
 
		for(int val : freqMap.keySet())
		{
			System.out.println("Frequency of " + val + " is : " + freqMap.get(val));
		}
 
	}
 
	public static HashMap<Integer, Integer> solveIterative(int[] arr)
	{
		HashMap<Integer,	Integer> freqMap = new HashMap<>();
 
		/* iterate through the array for contributing +1 
		 * as a frequency of that element, every time it is encountered.*/
		for(int val : arr)
		{
			if(!freqMap.containsKey(val))
			{
				/* if hashmap doesnt contains that element, 
				 * this means this is the first time the element is encountered,
				 * therefor freq of this element will be one for now.*/
				freqMap.put(val, 1);
			}
			else {
				/* if hashmap contains this element, 
				 * so now its updated frequency will be its past frequency + 1.
				 */
				freqMap.put(val, freqMap.get(val)+1);
			}
		}	
		return freqMap;
	}
}
